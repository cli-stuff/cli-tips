`alias` を使用して独自のコマンドを作成します。例: alias ll=`ls -la`
システムリソースのリアルタイム監視には `htop` を使用します
ディスクスペースを確認するには `df -h` を使用します
`grep -i` コマンドは大文字と小文字を区別しない検索を可能にします
自動タスクをスケジュールするには `crontab -e` を使用します
`du -sh *` コマンドは現在のフォルダ内のすべてのディレクトリのサイズを表示します
ファイルをすばやく見つけるには、`find /path/to/search -name filename` を使用します
すべてのブロックデバイスを一覧表示するには `lsblk` を使用します
システムプロセスを監視するには `top` を使用します
実行中のプロセスの詳細情報を表示するには `ps aux` を使用します
プロセスを終了するには、PID の後に `kill` を使用します
スクリプトを実行可能にするには `chmod +x script.sh` を使用します
任意のコマンドのマニュアルを表示するには `man command` を使用します
簡略化されたマニュアルページには `tldr <command>` を使用します
ディレクトリをコピーするには `cp -r` を使用します
ファイルを移動または名前変更するには `mv` を使用します
高速で信頼性の高いファイル同期には `rsync` を使用します
インターネットからファイルをダウンロードするには `wget` を使用します
URL からファイルをダウンロードするには `curl -O` を使用します
ディレクトリを圧縮するには `tar -czvf archive.tar.gz directory` を使用します
圧縮ファイルを抽出するには `tar -xzvf archive.tar.gz` を使用します
スーパーユーザー権限でコマンドを実行するには `sudo` を使用します
ファイルの内容を表示するには `cat` を使用します
ページごとにファイルの内容を表示するには `less` を使用します
1画面ずつファイルの内容を表示するには `more` を使用します
ファイルの変更をリアルタイムで監視するには `tail -f file` を使用します
ファイルの最初の10行を表示するには `head -n 10 file` を使用します
ファイル内を検索するには `grep` を使用します
ファイルの各行からセクションを削除するには `cut` を使用します
ファイル内の行をソートするには `sort` を使用します
ファイルから重複行を削除するには `uniq` を使用します
ファイルを行ごとに比較するには `diff` を使用します
名前でファイルを検索するには `find /path -name filename` を使用します
名前でファイルをすばやく見つけるには `locate filename` を使用します
`locate` が使用するデータベースを更新するには `updatedb` を使用します
コマンドショートカットを作成するには `alias` を使用します
環境変数を設定するには `export` を使用します
テキストを端末に表示するには `echo` を使用します
コマンドのパスを見つけるには `which command` を使用します
コマンド履歴を表示するには `history` を使用します
端末画面をクリアするには `clear` を使用します
パッケージリストを更新するには `sudo apt update` を使用します
インストール済みパッケージをアップグレードするには `sudo apt upgrade` を使用します
ソフトウェアパッケージをインストールするには `sudo apt install <package>` を使用します
パッケージをアンインストールするには `sudo apt remove <package>` を使用します
パッケージを検索するには `apt-cache search <package>` を使用します
インストール済みパッケージを一覧表示するには `dpkg -l` を使用します
ファイルがどのパッケージに属しているかを見つけるには `dpkg -S filename` を使用します
スナップパッケージをインストールするには `snap install <package>` を使用します
インストール済みのスナップパッケージを一覧表示するには `snap list` を使用します
スナップパッケージを削除するには `snap remove <package>` を使用します
システムサービスを開始するには `systemctl start <service>` を使用します
システムサービスを停止するには `systemctl stop <service>` を使用します
システムサービスを再起動するには `systemctl restart <service>` を使用します
起動時にサービスを有効にするには `systemctl enable <service>` を使用します
起動時にサービスを無効にするには `systemctl disable <service>` を使用します
システムログを表示するには `journalctl` を使用します
リアルタイムでログを表示するには `journalctl -xe` を使用します
開いているファイルとプロセスを一覧表示するには `lsof` を使用します
ファイアウォールの状態を確認するには `ufw status` を使用します
特定のポートをファイアウォールで許可するには `ufw allow <port>` を使用します
特定のポートをブロックするには `ufw deny <port>` を使用します
ネットワークインターフェイスを表示するには `ip addr` を使用します
ネットワークインターフェイスを表示および設定するには `ifconfig` を使用します
ネットワーク接続をテストするには `ping` を使用します
ネットワーク接続とルーティングテーブルを表示するには `netstat` を使用します
パケットが目的地に到達するまでのルートをトレースするには `traceroute` を使用します
CLI を介してネットワーク接続を管理するには `nmcli` を使用します
システムのホスト名を表示または設定するには `hostname` を使用します
現在のユーザーを表示するには `whoami` を使用します
システムの稼働時間を確認するには `uptime` を使用します
カーネルおよびシステムメッセージを表示するには `dmesg` を使用します
CPU アーキテクチャ情報を表示するには `lscpu` を使用します
システムメモリの使用状況を表示するには `free -h` を使用します
定期的にコマンドを実行するには `watch` を使用します
ファイルのみを検索するには `find /path -type f` を使用します
ディレクトリのみを検索するには `find /path -type d` を使用します
ファイルの権限を変更するには `chmod` を使用します
ファイルの所有権を変更するには `chown` を使用します
新しいユーザーを作成するには `useradd` を使用します
ユーザーアカウントを変更するには `usermod` を使用します
ユーザーのパスワードを変更するには `passwd` を使用します
新しいグループを作成するには `groupadd` を使用します
グループを削除するには `groupdel` を使用します
ユーザーが所属するグループを一覧表示するには `groups` を使用します
別のユーザーに切り替えるには `su` を使用します
ルートユーザーになるには `sudo su` を使用します
ユーザーおよびグループ ID を表示するには `id` を使用します
誰がログインしているかを確認するには `who` を使用します
ログイン履歴を表示するには `last` を使用します
ルートディレクトリを変更するには `chroot` を使用します
圧縮アーカイブを作成するには `tar -czf` を使用します
圧縮アーカイブを抽出するには `tar -xzf` を使用します
ファイルを圧縮するには `gzip` を使用します
gzip ファイルを解凍するには `gunzip` を使用します
より高い圧縮率でファイルを圧縮するには `bzip2` を使用します
bzip2 ファイルを解凍するには `bunzip2` を使用します
さらに高い圧縮率でファイルを圧縮するには `xz` を使用します
xz ファイルを解凍するには `unxz` を使用します
ファイルの MD5 チェックサムを確認するには `md5sum` を使用します
ファイルの SHA256 チェックサムを確認するには `sha256sum` を使用します
インタラクティブなディスク使用量アナライザーには `ncdu` を使用します
論理ボリュームを管理するには `lvm` を使用します
コンテナを管理するには `docker` を使用します
バージョン管理には `git` を使用します
リポジトリをクローンするには `git clone <repository>` を使用します
git リポジトリの状態を確認するには `git status` を使用します
変更をステージングエリアに追加するには `git add` を使用します
変更をコミットするには `git commit` を使用します
リモートリポジトリに変更をプッシュするには `git push` を使用します
リモートリポジトリから変更をプルするには `git pull` を使用します
ブランチをマージするには `git merge` を使用します
コミット履歴を表示するには `git log` を使用します
